<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wikimedia</groupId>
        <artifactId>wmf-jvm-parent-pom</artifactId>
        <version>1.74</version>
    </parent>

    <groupId>org.wikimedia.analytics.refinery</groupId>
    <artifactId>refinery</artifactId>
    <version>0.2.40-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Wikimedia Analytics Refinery</name>
    <description>Wikimedia Analytics utilities for processing data.</description>
    <url>https://github.com/wikimedia/analytics-refinery-source</url>

    <organization>
        <name>Wikimedia Foundation</name>
        <url>http://www.wikimediafoundation.org</url>
    </organization>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <mailingLists>
        <mailingList>
            <name>Analytics Mailinglist</name>
            <subscribe>https://lists.wikimedia.org/mailman/listinfo/analytics</subscribe>
            <unsubscribe>https://lists.wikimedia.org/mailman/listinfo/analytics</unsubscribe>
            <post>analytics@lists.wikimedia.org</post>
            <archive>http://lists.wikimedia.org/pipermail/analytics/</archive>
        </mailingList>
    </mailingLists>

    <modules>
        <module>refinery-tools</module>
        <module>refinery-core</module>
        <module>refinery-spark</module>
        <module>refinery-hive</module>
        <module>refinery-job</module>
    </modules>

    <scm>
        <connection>scm:git:https://gerrit.wikimedia.org/r/p/analytics/refinery/source</connection>
        <!--
        We point to an user property to make it possible to override the remote
        SCM in CI. Namely CI pushes over https when developers typically use ssh.
    -->
        <developerConnection>${developerConnection}</developerConnection>
        <tag>HEAD</tag>
        <url>scm:git:https://gerrit.wikimedia.org/r/p/analytics/refinery/source</url>
    </scm>

    <distributionManagement>
        <site>
            <id>analytics-refinery-site</id>
            <url>https://doc.wikimedia.org/analytics-refinery</url>
        </site>
    </distributionManagement>

    <properties>
        <developerConnection>scm:git:ssh://${user.name}@gerrit.wikimedia.org:29418/analytics/refinery/source</developerConnection>
        <eventutilities.version>1.3.4</eventutilities.version>
        <!--
        Those number reference jar-versions to be used as dependencies.
        We should try to keep them in sync with our hadoop/hive/spark versions.
      -->
        <hadoop.version>2.10.1</hadoop.version>
        <hive.version>2.3.6</hive.version>
        <scala.compat.version>2.12</scala.compat.version>
        <scala.version>${scala.compat.version}.10</scala.version>
        <spark.version>3.1.2</spark.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>args4j</groupId>
                <artifactId>args4j</artifactId>
                <version>2.0.29</version>
            </dependency>
            <dependency>
                <groupId>com.amazon.deequ</groupId>
                <artifactId>deequ</artifactId>
                <version>2.0.4-spark-3.1</version>
            </dependency>
            <dependency>
                <groupId>com.chuusai</groupId>
                <artifactId>shapeless_${scala.compat.version}</artifactId>
                <version>2.3.3</version>
            </dependency>
            <dependency>
                <groupId>com.criteo</groupId>
                <artifactId>rsvd</artifactId>
                <version>1.0-spark3</version>
                <exclusions>
                    <!--
                        Excluded from here as this dependency is a snapshot
                        from sunset https://bintray.com/
                        Adding the actual release of the version just after
                    -->
                    <exclusion>
                        <groupId>commons-codec</groupId>
                        <artifactId>commons-codec</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.datastax.spark</groupId>
                <artifactId>spark-cassandra-connector_${scala.compat.version}</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.10.0</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>2.10.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <!-- For Java 11 or above, use 3.x otherwise use 2.x. -->
                <version>2.9.3</version>
            </dependency>
            <dependency>
                <groupId>com.github.nscala-time</groupId>
                <artifactId>nscala-time_${scala.compat.version}</artifactId>
                <version>2.26.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.scopt</groupId>
                <artifactId>scopt_${scala.compat.version}</artifactId>
                <version>3.5.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.ua-parser</groupId>
                <artifactId>uap-java</artifactId>
                <version>1.5.3</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>com.maxmind.geoip2</groupId>
                <artifactId>geoip2</artifactId>
                <version>2.5.0</version>
            </dependency>
            <dependency>
                <groupId>com.netaporter</groupId>
                <artifactId>scala-uri_${scala.compat.version}</artifactId>
                <version>0.4.16</version>
            </dependency>
            <dependency>
                <groupId>com.outr</groupId>
                <artifactId>profig-macros_${scala.compat.version}</artifactId>
                <version>2.3.8</version>
            </dependency>
            <dependency>
                <groupId>com.outr</groupId>
                <artifactId>profig_${scala.compat.version}</artifactId>
                <version>2.3.8</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>1.6.2</version>
            </dependency>
            <dependency>
                <groupId>com.twitter</groupId>
                <artifactId>algebird-core_${scala.compat.version}</artifactId>
                <version>0.13.7</version>
            </dependency>
            <!-- Added to fix failing snapshot dependency from above -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.15</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>1.4.1</version>
            </dependency>
            <dependency>
                <groupId>graphframes</groupId>
                <artifactId>graphframes</artifactId>
                <version>0.8.1-spark3.0-s_${scala.compat.version}</version>
            </dependency>
            <dependency>
                <groupId>io.circe</groupId>
                <artifactId>circe-core_${scala.compat.version}</artifactId>
                <version>0.13.0</version>
            </dependency>
            <dependency>
                <groupId>io.circe</groupId>
                <artifactId>circe-generic-extras_${scala.compat.version}</artifactId>
                <version>0.13.0</version>
            </dependency>
            <dependency>
                <groupId>io.circe</groupId>
                <artifactId>circe-generic_${scala.compat.version}</artifactId>
                <version>0.13.0</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.10.8</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.5</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.12</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.13</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>5.5.3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-avro_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-graphx_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-mllib_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.7</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>2.12.4</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>3.2.5.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.typelevel</groupId>
                <artifactId>cats-core_${scala.compat.version}</artifactId>
                <version>2.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.wikimedia</groupId>
                <artifactId>eventutilities-shaded</artifactId>
                <version>${eventutilities.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wikimedia</groupId>
                <artifactId>eventutilities-spark</artifactId>
                <version>${eventutilities.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wikimedia.analytics.refinery.core</groupId>
                <artifactId>refinery-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wikimedia.analytics.refinery.hive</groupId>
                <artifactId>refinery-hive</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wikimedia.analytics.refinery.spark</groupId>
                <artifactId>refinery-spark</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wikimedia.analytics.refinery.tools</groupId>
                <artifactId>refinery-tools</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.20</version>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.0.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-annotations</artifactId>
                <version>${hadoop.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- Explicitly needed to use DataFrameSuiteBase (tests with SparkSession) -->
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-hdfs</artifactId>
                <version>${hadoop.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-cli</artifactId>
                <version>${hive.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-exec</artifactId>
                <version>${hive.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-jdbc</artifactId>
                <version>${hive.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.iceberg</groupId>
                <artifactId>iceberg-spark-runtime-3.1_${scala.compat.version}</artifactId>
                <version>1.2.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive-thriftserver_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.compat.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.holdenkarau</groupId>
                <artifactId>spark-testing-base_${scala.compat.version}</artifactId>
                <version>3.1.1_1.1.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- Explicitely providing netty for test -->
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>4.1.56.Final</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalactic</groupId>
                <artifactId>scalactic_${scala.compat.version}</artifactId>
                <version>3.0.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalamock</groupId>
                <artifactId>scalamock-scalatest-support_${scala.compat.version}</artifactId>
                <version>3.6.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.compat.version}</artifactId>
                <version>3.0.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!--
                    adding explicit dep for snappy and netty otherwise
                    spark assumes is on the java.library.path
                    see: https://github.com/rvs/snappy-java/blob/master/src/main/resources/org/xerial/snappy/SnappyNativeLoader.java#L47
                -->
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>1.1.8.4</version>
                <!-- Note 2024-01-23: 1.1.2.5 is not compatible with Mac M1 -->
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>1.0.3</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>wmf-mirror-spark</id>
            <url>https://archiva.wikimedia.org/repository/mirror-spark/</url>
        </repository>
        <repository>
            <id>wmf-mirror-cloudera</id>
            <url>https://archiva.wikimedia.org/repository/mirror-cloudera/</url>
        </repository>

        <!-- Manually uploaded artifacts for analytics -->
        <repository>
            <id>wmf-analytics-old-uploads</id>
            <url>https://archiva.wikimedia.org/repository/analytics-old-uploads/</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <configuration>
                        <failOnError>false</failOnError>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- Deactivate forbidden API until we fix violations -->
                    <!-- TODO: reactivate once violations are fixed -->
                    <groupId>de.thetaphi</groupId>
                    <artifactId>forbiddenapis</artifactId>
                    <executions>
                        <execution>
                            <id>check-forbidden-apis</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>check-forbidden-test-apis</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <configuration>
                        <failsOnError>false</failsOnError>
                        <failOnViolation>false</failOnViolation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <configuration>
                        <!-- FIXME: should we really use a different tag format than other projects? -->
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <!-- 2.7 is the latest version that supports symlinks the way we need to -->
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <configuration>
                        <createDependencyReducedPom>false</createDependencyReducedPom>
                        <shadedArtifactAttached>true</shadedArtifactAttached>
                        <shadedClassifierName>shaded</shadedClassifierName>
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                </plugin>
                <plugin>
                    <!-- Global surefire setup -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <!-- Needed to overcome URLClassLoader issue with java update -->
                        <useSystemClassLoader>false</useSystemClassLoader>
                        <forkCount>1</forkCount>
                        <includes>
                            <include>**/Test*.java</include>
                        </includes>
                        <!-- argLine is forwarded from JaCoCo, and the file encoding given to avoid problems when building. -->
                        <!--suppress UnresolvedMavenProperty -->
                        <argLine>${argLine} -Dfile.encoding=UTF-8</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.scala-tools</groupId>
                    <artifactId>maven-scala-plugin</artifactId>
                    <version>2.15.2</version>
                    <configuration>
                        <args>
                            <arg>-deprecation</arg>
                            <arg>-feature</arg>
                        </args>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>1.0</version>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jdk17</id>
            <activation>
                <jdk>17</jdk>
            </activation>
            <dependencyManagement>
                <!--
          excludes jdk.tools when building on JDK17

          JDK17 is used to run sonar analysis and fails as
          tools.jar has been removed from JDK17. Excluding this
          dependency is a workaround to get the sonar analysis
          working. A proper fix (probably updating hadoop and
          hive versions) will be required before doing a proper
          migration to JDK17.
        -->
                <dependencies>

                    <dependency>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-annotations</artifactId>
                        <version>${hadoop.version}</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>jdk.tools</groupId>
                                <artifactId>jdk.tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-common</artifactId>
                        <version>${hadoop.version}</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>jdk.tools</groupId>
                                <artifactId>jdk.tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>

                    <dependency>
                        <groupId>org.apache.hive</groupId>
                        <artifactId>hive-cli</artifactId>
                        <version>${hive.version}</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>jdk.tools</groupId>
                                <artifactId>jdk.tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>

                    <dependency>
                        <groupId>org.apache.hive</groupId>
                        <artifactId>hive-exec</artifactId>
                        <version>${hive.version}</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>jdk.tools</groupId>
                                <artifactId>jdk.tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>

                    <dependency>
                        <groupId>org.apache.hive</groupId>
                        <artifactId>hive-jdbc</artifactId>
                        <version>${hive.version}</version>
                        <scope>provided</scope>
                        <exclusions>
                            <exclusion>
                                <groupId>jdk.tools</groupId>
                                <artifactId>jdk.tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>

</project>
